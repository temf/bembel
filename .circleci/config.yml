version: 2.0
jobs:
  build:
    filters:
      branches:
        only:
          - master
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - run:
          name: "Updating"
          command: |
            sudo apt-get update && sudo apt-get install -y openssh-client git
      - checkout
      - run:
          name: "Getting Eigen"
          command: |
            export DEBIAN_FRONTEND=noninteractive && sudo apt-get install --yes  libeigen3-dev
      - run:
          name: "Getting build-essential"
          command: |
            sudo apt-get install --yes build-essential make cmake;
      - run:
          name: "Calling CMake"
          command: |
            cmake . -DCMAKE_BUILD_TYPE=release
      - run:
          name: "Compile"
          command: |
            make -j4
      - run:
          name: "Running tests"
          command: |
            make test
  docs-deploy:
    filters:
      branches:
        only:
          - master
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run:
          name: "Getting Doxygen"
          command: |
            sudo apt-get install --yes doxygen
      - run:
          name: "Getting dot"
          command: |
            sudo apt-get install --yes graphviz
      - run:
          name: "Creating Documentation"
          command: |
            doxygen Doxyfile
      - run:
          name: "Install Node.js and npm"
          command: |
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt-get install -qy build-essential
            sudo apt-get install -qy nodejs
      - run:
          name: Install and configure dependencies
          command: |
            npm install gh-pages@3.0.0
            git config user.email "mx-nlte@users.noreply.github.com"
            git config user.name "ci-build"
      - run:
          name: Deploy docs to gh-pages branch
          command: npx gh-pages --dist . -a -m "CircleCI -> automated update [skip ci]"

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters: 
            tags:
              only: /.*/
            branches:
              only: master
      - docs-deploy:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only: master
