namespace Bembel {
/**
\page DesignConsiderations Design Considerations


Bembel is a header-only template library.
On this page we explain fundamental design considerations.
This is intended to improve a fundamental understanding of the code base and provide starting points for extensions.

\section secCRTP Curiously Recurring Template Pattern

The three essential components [LinearOperator](\ref LinearOperator), [LinearForm](\ref LinearForm) and [Potential](\ref Potential) of the BEM are implemented in Bembel according to the Curiously Recurring Template Pattern.

## Linear Operator

If you want to add an implementation of an [LinearOperator](\ref LinearOperator), then LinearOperatorTraits must be defined and an implementation for the integral evaluation must be given.

### Linear Operator Traits

The LinearOperatorTraits are explained using the example of the LaplaceSingleLayerOperator. These traits are passed to the implementation via template parameters and fundamentally define the properties of the software.
\code
template <>
struct LinearOperatorTraits<LaplaceSingleLayerOperator> {
  typedef Eigen::VectorXd EigenType;
  typedef Eigen::VectorXd::Scalar Scalar;
  enum {
    OperatorOrder = -1,
    Form = DifferentialForm::Discontinuous,
    NumberOfFMMComponents = 1
  };
};
\endcode
The explanation of the traits is

 - `EigenType` defines the type of the vectors.
 - `Scalar` defines if the operator is real or complex valued.
 - `OperatorOrder` defines the order of the integral operator which is necessary for the quadrature.
 - `Form` defines which B-spline basis is chosen.
 - `NumberOfFMMComponents` is used in the H2Matrix.

There are three options for the parameter `Form`: DifferentialForm::Continuous, DifferentialForm::DivConforming and DifferentialForm::Discontinuous.
This selects a scalar continuous, vector-valued and div conforming or scalar discontinuous B-spline basis for the discretization.

### Evaluate Integrand

Furthermore, there must be an implementation of the function `evaluateIntegrand_impl()`.

---

*/
}  // namespace Bembel